{"version":3,"sources":["logo.svg","version.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["appVersion","App","fetch","headers","then","response","text","rawVersion","trim","window","location","replace","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAAe,G,KAAA,IAA0B,kCCA9BA,G,KAAa,U,OCmDTC,MAzBf,WAGE,OAvBEC,MAAM,6FACF,CACQC,QAAS,CACL,gBAAiB,sCACjB,OAAU,WACV,QAAW,OAGtBC,MAAK,SAASC,GACXA,EAASC,OACJF,MAAK,SAACG,IACHA,EAAaA,EAAWC,UACLR,GACfS,OAAOC,SAASC,QAAhB,cAA+BJ,UAWnD,qBAAKK,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,+CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBASA,4BAAIlB,UC/BGmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c98023e6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export let appVersion = \"0.1.11\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {appVersion} from \"./version\";\n\nfunction goToVersionedUrlIfOutdated() {\n    fetch(\"https://raw.githubusercontent.com/yaroslav-ryapolov/test-github-pages/gh-pages/version.txt\",\n        {\n                headers: {\n                    \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n                    \"Pragma\": \"no-cache\",\n                    \"Expires\": \"0\",\n                },\n            })\n        .then(function(response) {\n            response.text()\n                .then((rawVersion: string) => {\n                    rawVersion = rawVersion.trim();\n                    if (rawVersion !== appVersion) {\n                        window.location.replace(`#?v=${rawVersion}`);\n                        // window.location.reload(true);\n                    }\n                });\n        });\n}\n\nfunction App() {\n    goToVersionedUrlIfOutdated();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n\n        <p>{appVersion}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}